// mathy keyboard layout
// Author: Anthony Romeo <anthony@romeo.sh>, 2022
//
// A math keyboard layout for quick mathy communication and marginally guessable keys. 
// 
// Notes: 
// - Hold the right-alt key to access Level 3 shift symbols, hold Shift and right-Alt for Level 4
// - **Caps lock replaces the Compose key ("⎄") to expand the number of symbols available
//   - Because of this, some easily-composable keys are left out (e.g. typing "⎄-:" outputs "÷", and "⎄=/" → "≠" )
// - Largely based around Greek Keyboard, replacing identical-looking Greek symbols with other letters
// - Arrow characters are produced from the arrow keys at Level 3 and Level 4
default partial alphanumeric_keys modifier_keys
xkb_symbols "mathy" {

    name[Group1]="English (US Mathy)";

    key <TLDE> { [ grave, asciitilde,         U25A1, U25B3 ] };   // ` ~ □ △    // 
    key <AE01> { [ 1, exclam,                 U22A4, U22A5 ] };   // 1 ! ⊤ ⊥    // 1 is True | !1 is False
    key <AE02> { [ 2, at,                     U220E, U22A2 ] };   // 2 @ ∎ ⊢    // TWOmbstone character 
    key <AE03> { [ 3, numbersign,             U03F5, U2107 ] };   // 3 # ϵ ℇ    // Greek epsilon above epsilon key
    key <AE04> { [ 4, dollar,                 U2220, U221A ] };   // 4 $ ∠ √    // 4 has an angle in its shape
    key <AE05> { [ 5, percent,                U2020, U2234 ] };   // 5 % † ∴    // Dagger, Therefore above T
    key <AE06> { [ 6, asciicircum,            U00B0, U2A1D ] };   // 6 ^ ° ⋉    // 
    key <AE07> { [ 7, ampersand,              U03D1, U03F4 ] };   // 7 & ϑ ϴ    // Alt theta above 
    key <AE08> { [ 8, asterisk,               U221E, U2219 ] };   // 8 * ∞ ∙    // Rotated 8
    key <AE09> { [ 9, parenleft,              U221D, U27E8 ] };   // 9 ( ∝ ⟨    // Vaguely rotated 9
    key <AE10> { [ 0, parenright,             U2205, U27E9 ] };   // 0 ) ∅ ⟩    // Null makes sense at 0
    key <AE11> { [ minus, underscore,         U00AC, U203E ] };   // - _ ¬ ‾    // negative ~ not | opposite of underscore
    key <AE12> { [ equal, plus,               U2208, U00D7 ] };   // = + ∈ ×    // kinda makes sense

    key <AD01> { [ q, Q,                      U2202, U2207 ] };   // q Q ∂ ∇    // On the Greek keyboard, this key is semicolon. Prime spot for derivatives 
    key <AD02> { [ w, W,      Greek_finalsmallsigma, U222B ] };   // w W ς ∫    // Integral for sigma
    key <AD03> { [ e, E,              Greek_epsilon, U2203 ] };   // e E ε ∃    // Obvious replacement
    key <AD04> { [ r, R,                  Greek_rho, U211D ] };   // r R ρ ℝ    // RHO looks like P. Let's make it the Reals
    key <AD05> { [ t, T,                  Greek_tau, U2135 ] };   // t T τ ℵ    // Location of Aleph on Hebrew Keyboard
    key <AD06> { [ y, Y,              Greek_upsilon, U2127 ] };   // y Y υ ℧   // Using Greek Upsilon
    key <AD07> { [ u, U,          Greek_theta, Greek_THETA ] };   // u U θ Θ 
    key <AD08> { [ i, I,                Greek_iota,  U3088 ] };   // i I ι よ   // Should probably be something else?
    key <AD09> { [ o, O,                      U2218, U25CB ] };   // o O ∘ ○    // Circles
    key <AD10> { [ p, P,                Greek_pi, Greek_PI ] };   // p P π Π    
    key <AD11> { [ bracketleft, braceleft,    U230A, U2308 ] };   // [ { ⌊ ⌈   
    key <AD12> { [ bracketright, braceright,  U230B, U2309 ] };   // ] } ⌋ ⌉ 

    key <AC01> { [ a, A,                Greek_alpha, U2200 ] };   // a A α ∀    // Obvious replacement
    key <AC02> { [ s, S,          Greek_sigma, Greek_SIGMA ] };   // s S σ Σ    // Inner sigma and Greek Sigma
    key <AC03> { [ d, D,          Greek_delta, Greek_DELTA ] };   // d D δ Δ    // currently Greek Delta. Need to change this. 
    key <AC04> { [ f, F,              Greek_phi, Greek_PHI ] };   // f F φ Φ
    key <AC05> { [ g, G,          Greek_gamma, Greek_GAMMA ] };   // g G γ Γ
    key <AC06> { [ h, H,                  Greek_eta, U210D ] };   // h H η ℍ    
    key <AC07> { [ j, J,                Greek_xi, Greek_XI ] };   // j J ξ Ξ
    key <AC08> { [ k, K,                Greek_kappa, U211A ] };   // k K κ ℚ    // Q taken over by derivatives
    key <AC09> { [ l, L,          Greek_lamda, Greek_LAMDA ] };   // l L λ Λ
    key <AC10> { [ semicolon, colon,          U2227, U2229 ] };   // ; : ∧ ∩    
    key <AC11> { [ apostrophe, quotedbl,      U2194, U21D4 ] };   // ' " ↔ ⇔    // Seems like an okay place for it

    key <AB01> { [ z, Z,                 Greek_zeta, U2124 ] };   // z Z ζ ℤ
    key <AB02> { [ x, X,                  Greek_chi, U2012 ] };   // x X χ ℂ    // 'Chi' starts with a C in English
    key <AB03> { [ c, C,              Greek_psi, Greek_PSI ] };   // c C ψ Ψ
    key <AB04> { [ v, V,          Greek_omega, Greek_OMEGA ] };   // v V ω Ω
    key <AB05> { [ b, B,                 Greek_beta, U2136 ] };   // b B β ℶ    // Beth on Hebrew Keyboard
    key <AB06> { [ n, N,                   Greek_nu, U2115 ] };   // n N ν ℕ
    key <AB07> { [ m, M,                  Greek_mu,  U0448 ] };   // m M μ ш    // "sha" for shuffle product -- why not?
    key <AB08> { [ comma, less,               U228F, U2282 ] };   // , < ⊏ ⊂
    key <AB09> { [ period, greater,           U2290, U2283 ] };   // . > ⊐ ⊂
    key <AB10> { [ slash, question,           U2228, U222A ] };   // / ? ∨ ∪    // Related to the '" key

    key <BKSL> { [ backslash, bar,            U25CA, U2225 ] };   // \ | ◊ ∥    // Needed a Lozenge somewhere

    // Keypad Keys
    key <UP>   { [ Up, Up,                    U2191, U21D1 ] };   // up up ↑ ⇑ 
    key <DOWN> { [ Down, Down,                U2193, U21D3 ] };   // down down ↓ ⇓
    key <LEFT> { [ Left, Left,                U2190, U21D0 ] };   // left left ← ⇐
    key <RGHT> { [ Right, Right,              U2192, U21D2 ] };   // right right → ⇒ 


    // ** Modifier Keys changes — Please replace anything you hate! **

    // Sets Compose key to right Ctrl
    // key <RCTL> { type[Group1] = "ONE_LEVEL", symbols[Group1] = [ Multi_key ] };

    // Sets Compose key to Right Super
    include "compose(rwin)"

    // Level 3 set to both CapsLock and AltGr
    include "level3(ralt_switch)"
    include "level3(caps_switch)"

    // Pressing both shifts turns on caps lock
    include "shift(both_capslock)"
};
